<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<log4j:configuration debug="true" reset="true" xmlns:log4j="http://jakarta.apache.org/log4j/">

    <!-- ================================ 自定义输出格式说明 ================================
    -X: X信息输出时左对齐；
    %p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL,
    %d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
    %r: 输出自应用启动到输出该log信息耗费的毫秒数
    %c: 输出日志信息所属的类目，通常就是所在类的全名
    %t: 输出产生该日志事件的线程名
    %l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main (TestLog4.java:10)
    %x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。
    %%: 输出一个"%"字符
    %F: 输出日志消息产生时所在的文件名称
    %L: 输出代码中的行号
    %m: 输出代码中指定的消息,产生的日志具体信息
    %n: 输出一个回车换行符，Windows平台为"/r/n"，Unix平台为"/n"输出日志信息换行
    可以在%与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式。如：
    1)%20c：指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，默认的情况下右对齐。
    2)%-20c:指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，"-"号指定左对齐。
    3)%.30c:指定输出category的名称，最大的宽度是30，如果category的名称大于30的话，就会将左边多出的字符截掉，但小于30的话也不会有空格。
    4)%20.30c:如果category的名称小于20就补空格，并且右对齐，如果其名称长于30字符，就从左边较远输出的字符截掉。
    -->

    <!-- =================================== 输出方式说明 ===================================
    Log4j提供的appender有以下几种:
    org.apache.log4j.ConsoleAppender（控制台）
    org.apache.log4j.FileAppender（文件）
    org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
    org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
    org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
    -->

    <!-- 将日志信息输出到控制台 -->
    <appender name="stdout" class="org.apache.log4j.ConsoleAppender">
        <!-- 输出大于等于指定日志级别的日志 -->
        <param name="Threshold" value="debug"/>
        <!-- 过滤器设置输出的级别 -->
        <!--        <filter class="org.apache.log4j.varia.LevelRangeFilter">-->
        <!--            &lt;!&ndash; 设置日志输出的最小级别 &ndash;&gt;-->
        <!--            <param name="LevelMin" value="debug"/>-->
        <!--            &lt;!&ndash; 设置日志输出的最大级别 &ndash;&gt;-->
        <!--            <param name="LevelMax" value="error"/>-->
        <!--            &lt;!&ndash; 设置日志输出的xxx，默认是false &ndash;&gt;-->
        <!--            <param name="AcceptOnMatch" value="true"/>-->
        <!--        </filter>-->
        <!-- 设置日志输出的样式 -->
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d %-5p [%t] [%F:%L] : %m%n"/>
        </layout>
    </appender>

    <!-- 将日志信息输出到文件，但是当文件的大小达到某个阈值的时候，日志文件会自动回滚 -->
    <appender name="rollingFileAppender" class="org.apache.log4j.RollingFileAppender">
        <!-- 设置日志信息输出文件全路径名 -->
        <param name="File" value="D:/logs/slf4j-log4j/rollingFileAppender.log"/>
        <!-- 设置当日志文件达到此阈值的时候自动回滚，单位可以是KB，MB，GB，默认单位是KB -->
        <param name="MaxFileSize" value="1KB"/>
        <!-- 设置保存备份回滚日志的最大个数 -->
        <param name="MaxBackupIndex" value="3"/>
        <!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->
        <param name="Append" value="true"/>
        <!-- 输出大于等于指定日志级别的日志 -->
        <param name="Threshold" value="info"/>
        <!-- 设置日志输出的样式 -->
        <layout class="org.apache.log4j.PatternLayout">
            <!-- 设置日志输出的格式 -->
            <param name="ConversionPattern" value="%d %-5p [%t] [%F:%L] : %m%n"/>
        </layout>
    </appender>

    <!-- 将日志信息输出到文件，可以配置多久产生一个新的日志信息文件 -->
    <appender name="dailyRollingFileAppender" class="org.apache.log4j.DailyRollingFileAppender">
        <!-- 设置日志信息输出文件全路径名 -->
        <param name="File" value="D:/logs/slf4j-log4j/dailyRollingFileAppender.log"/>
        <!-- 设置日志每分钟回滚一次，即产生一个新的日志文件 -->
        <param name="DatePattern" value="'_'yyyy-MM-dd_HH-mm'.log'"/>
        <!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->
        <param name="Append" value="true"/>
        <!-- 输出大于等于指定日志级别的日志 -->
        <param name="Threshold" value="info"/>
        <!-- 设置日志输出的样式 -->
        <layout class="org.apache.log4j.PatternLayout">
            <!-- 设置日志输出的格式 -->
            <param name="ConversionPattern" value="%d %-5p [%t] [%F:%L] : %m%n"/>
        </layout>
    </appender>

    <!-- 将日志信息发送到邮箱 -->
    <appender name="SMTPAppender" class="org.apache.log4j.net.SMTPAppender">
        <param name="From" value="test@126.com"/>
        <param name="SMTPHost" value="smtp.126.com"/>
        <param name="Subject" value="log4jMessage"/>
        <param name="To" value="test@126.com"/>
        <param name="SMTPUsername" value="test"/>
        <param name="SMTPPassword" value="test"/>
        <param name="Threshold" value="error"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d %-5p [%t] [%F:%L] : %m%n"/>
        </layout>
    </appender>

    <root>
        <level value="trace"/>
        <appender-ref ref="stdout"/>
        <appender-ref ref="rollingFileAppender"/>
        <appender-ref ref="dailyRollingFileAppender"/>
        <!-- <appender-ref ref="SMTPAppender"/>-->
    </root>
</log4j:configuration>